# Code generated by devtool; DO NOT EDIT.
version: '2.1'
orbs:
  go: circleci/go@1.7.1
  tool: faetools/service-tool@0.0.12
executors:
  golang-dev:
    docker:
      - image: golang:1.18.3
defaults: &resources
  team: firestarters
  gateway_rate_limit_second: 5
  gateway_allowed_payload_size: 1
jobs:
  unit-tests:
    machine:
      image: ubuntu-2004:202104-01
    environment:
      CONFIG_APP_ENVIRONMENT: testing
      GOFLAGS: -mod=vendor
      GOLANGCI_LINT_VERSION: 1.44.2
      GOPRIVATE: github.com/faetools/*
      GOTESTSUM_VERSION: 1.8.1
      SONAR_SCANNER_VERSION: 4.7.0.2747
    steps:
      - checkout
      - run:
          name: Generate Checksum
          command: |-
            touch /tmp/cachechecksum.txt
            echo "$GOTESTSUM_VERSION-$SONAR_SCANNER_VERSION-$GOLANGCI_LINT_VERSION" > /tmp/cachechecksum.txt
      - restore_cache:
          keys:
            - unit-setup-{{ arch }}-v1-{{ checksum "/tmp/cachechecksum.txt" }}
      - run:
          name: Setup
          command: |
            sudo mkdir -p /usr/local/go_workspace/bin
            if [ -d "/tmp/cache" ]
            then
                echo "using cache";
                sudo cp /tmp/cache/gotestsum/${GOTESTSUM_VERSION}/gotestsum /usr/local/bin/gotestsum
                mkdir -p /tmp/sonar-scanner-${SONAR_SCANNER_VERSION}-linux
                cp -r /tmp/cache/sonar-scanner/${SONAR_SCANNER_VERSION}/. /tmp/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/.
                sudo cp /tmp/cache/golangci-lint/${GOLANGCI_LINT_VERSION}/golangci-lint /usr/local/go_workspace/bin/golangci-lint
            else
                echo "pulling from source";
                curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" | sudo tar -xz -C /usr/local/bin gotestsum
                wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip -P /tmp
                unzip /tmp/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip -d /tmp
                curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sudo sh -s -- -b /usr/local/go_workspace/bin v${GOLANGCI_LINT_VERSION}
                mkdir -p /tmp/cache/gotestsum/${GOTESTSUM_VERSION}
                mkdir -p /tmp/cache/sonar-scanner/${SONAR_SCANNER_VERSION}
                mkdir -p /tmp/cache/golangci-lint/${GOLANGCI_LINT_VERSION}
                cp /usr/local/bin/gotestsum /tmp/cache/gotestsum/${GOTESTSUM_VERSION}/gotestsum
                cp -r /tmp/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/. /tmp/cache/sonar-scanner/${SONAR_SCANNER_VERSION}/.
                sudo cp /usr/local/go_workspace/bin/golangci-lint /tmp/cache/golangci-lint/${GOLANGCI_LINT_VERSION}/golangci-lint
            fi
            mkdir /tmp/test-results
            mkdir -p /tmp/artifacts
      - save_cache:
          key: unit-setup-{{ arch }}-v1-{{ checksum "/tmp/cachechecksum.txt" }}
          paths:
            - /tmp/cache
      - go/install:
          cache: true
          version: 1.18.3
      - restore_cache:
          keys:
            - v2-golang-cache-{{ arch }}-{{ checksum "go.sum" }}
      - run:
          name: Go Test
          environment:
            CI: true
          command: gotestsum --junitfile /tmp/test-results/unit-tests.xml ./... -race -coverprofile=cov.out -coverpkg=./...
      - store_test_results:
          path: /tmp/test-results
      - run:
          name: Golangci Lint
          command: /usr/local/go_workspace/bin/golangci-lint run --out-format checkstyle --issues-exit-code=0 --timeout=5m0s > report.xml
      - store_artifacts:
          path: ~/project/report.xml
      - run:
          name: Code Coverage HTML
          working_directory: cmd/app
          command: go tool cover -html=../../cov.out -o /tmp/artifacts/coverage.html
      - store_artifacts:
          path: /tmp/artifacts
      - save_cache:
          key: v2-golang-cache-{{ arch }}-{{ checksum "go.sum" }}
          paths:
            - ~/.cache/go-build
            - ~/.cache/golangci-lint
      - run:
          name: Check sonar cache
          command: |-
            if [[ "$CIRCLE_BRANCH" != "master" ]] && [[ "$CIRCLE_BRANCH" != "main" ]] && [[ -z "$CIRCLE_PULL_REQUEST" ]]; then
            			circleci-agent step halt
            		fi
      - run:
          name: Generate Sonar Checksum
          command: |-
            touch /tmp/sonarchecksum.txt
            		echo "$SONAR_SCANNER_VERSION" > /tmp/sonarchecksum.txt
      - restore_cache:
          keys:
            - v1-sonar-cache-{{ arch }}-{{ checksum "/tmp/sonarchecksum.txt" }}
      - run:
          name: Analyse Code
          command: |
            if [ "$CIRCLE_BRANCH" = "master" ] || [ "$CIRCLE_BRANCH" = "main" ]; then
            	/tmp/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/bin/sonar-scanner -Dsonar.projectKey="faetools_$CIRCLE_PROJECT_REPONAME" -Dsonar.organization=faetools -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.exclusions="**/*_test.go,**/vendor/**,**/testdata/*,report.xml,**/*.gen.go,**/*.js,**/fixtures/*,**/mocks/*,cmd/app/**,resources/**" -Dsonar.tests=. -Dsonar.test.inclusions="**/*_test.go" -Dsonar.test.exclusions="**/vendor/**" -Dsonar.go.coverage.reportPaths=cov.out -Dsonar.go.golangci-lint.reportPaths=report.xml -Dsonar.projectVersion=$(git rev-parse --verify HEAD);
            elif [ -n "$CIRCLE_PULL_REQUEST" ]; then
            	base=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls/${CIRCLE_PULL_REQUEST##*/}" | jq -r '.base.ref')
            	/tmp/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/bin/sonar-scanner -Dsonar.projectKey="faetools_$CIRCLE_PROJECT_REPONAME" -Dsonar.organization=faetools -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.exclusions="**/*_test.go,**/vendor/**,**/testdata/*,report.xml,**/*.gen.go,**/*.js,**/fixtures/*,**/mocks/*,cmd/app/**,resources/**" -Dsonar.tests=. -Dsonar.test.inclusions="**/*_test.go" -Dsonar.test.exclusions="**/vendor/**" -Dsonar.go.coverage.reportPaths=cov.out -Dsonar.go.golangci-lint.reportPaths=report.xml -Dsonar.pullrequest.key="${CIRCLE_PULL_REQUEST##*/}" -Dsonar.pullrequest.branch="$CIRCLE_BRANCH" -Dsonar.pullrequest.base="$base" -Dsonar.pullrequest.github.repository="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME" -Dsonar.pullrequest.provider=github;
            else
            	circleci-agent step halt
            fi
      - save_cache:
          key: v1-sonar-cache-{{ arch }}-{{ checksum "/tmp/sonarchecksum.txt" }}
          paths:
            - ~/.sonar/cache
workflows:
  master:
    jobs:
      - unit-tests:
          name: Unit Tests
          context:
            - sonarcloud
            - github
          filters:
            branches:
              only:
                - master
  pr:
    jobs:
      - unit-tests:
          name: Unit Tests
          context:
            - sonarcloud
            - github
          filters:
            branches:
              ignore:
                - master
